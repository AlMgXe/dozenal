#!/usr/bin/perl
#+AMDG  This document was begun on 19 Sept 11E8, the feast
# of St. Matthew the Apostle and Evangelist, and it is
# humbly dedicated to him and to the Immaculate Heart of
# Mary for their prayers, and to the Sacred Heart of Jesus
# for His mercy.

use strict;
use Date::Day;
use Getopt::Std;

my $daynum;
my $celltext = "";
my $numdays;
my @callist;
my $calyear;
getopts('d:');
our($opt_d);

# sets up the calendar's basic routines

sub preamble()
{
	my $preamble;
	$preamble = <<END;
		\\documentclass{minimal}
		\\usepackage{dozenal}
		\\usepackage[T1]{fontenc}
		\\usepackage{lmodern}
		\\usepackage{array}
		\\usepackage{calc}
		\\usepackage{ifoddpage}
		\\usepackage{tcolorbox}
		\\usepackage{graphicx}
		\\newlength{\\shortline}
		\\newlength{\\thirdskip}
		\\newlength{\\weeklydayboxwid}
		\\setlength\\arrayrulewidth{.4pt}
		\\setlength\\extrarowheight{4pt}
		\\usepackage[twoside,paperwidth=8.5in,paperheight=11in,width=7.5in,height=10.5in,bottom=0.25in]{geometry}
		\\usepackage{lscape}
		\\def\\Biggie{\\fontsize{17pt}{19pt}\\selectfont}
		\\def\\monthsty#1{\\fontsize{36pt}{40pt}\\textsc{#1}}
		\\def\\daysty{\\centering\\Biggie\\scshape}
		\\def\\weekdaysty{\\centering\\scshape}
		\\def\\numsty{\\fontsize{14pt}{16pt}\\selectfont}
		\\def\\smallnum{\\fontsize{10pt}{10pt}\\selectfont\\bfseries}
		\\def\\extsmall{\\fontsize{7pt}{7pt}\\selectfont\\bfseries}
		\\def\\feaststy#1{\\vbox{\\centering\\scshape\\fontsize{11pt}{12pt}\\selectfont#1}}
		\\def\\halffeast#1{\\vbox{\\centering\\scshape\\fontsize{10pt}{11pt}\\selectfont#1}}
		\\def\\classsty#1{\\vspace{-0.5em}\\vbox{\\centering\\scshape\\fontsize{9pt}{10pt}\\selectfont#1}}
		\\def\\halfclass#1{\\vspace{\\fill}\\scshape\\fontsize{8pt}{10pt}\\selectfont#1}
		\\def\\commsty#1{\\vskip-.5em\\vbox{\\centering\\upshape\\fontsize{8pt}{9pt}\\selectfont#1}}
		\\def\\halfcomm#1{\\upshape\\fontsize{9pt}{10pt}\\selectfont#1}
		\\def\\colorsty#1{\\vbox to\\fill{\\vfill\\hbox to\\linewidth{\\hfill\\itshape\\fontsize{8pt}{10pt}\\selectfont#1\\hfill}}}
		\\def\\halfcolor#1{\\itshape\\fontsize{8pt}{10pt}\\selectfont#1}
		\\def\\ls{\\hskip0.2em}
		\\def\\shorts{\\hskip0.1em}
		\\begin{document}
		\\newlength\\daywidth
		\\setlength{\\daywidth}{10in/7 - 3.19986pt/7}
		\\newlength{\\smallday}
		\\setlength{\\smallday}{1.3em}
		\\newlength\\boxwidth
		\\setlength{\\boxwidth}{10in/7 - 2pt}
		\\newlength\\dayheight
		\\setlength{\\dayheight}{6.7in/7}
		\\newlength{\\smallheight}
		\\setlength{\\smallheight}{0em}
		\\def\\specstyl#1{\\centering\\fontsize{10pt}{12pt}\\selectfont\\itshape #1}
		\\setlength\\parindent{0em}
		\\begin{titlepage}
		CALENDAR
		\\end{titlepage}
END
	print "$preamble\n";
}

# convert numbers to decimal

# converts single dozenal digits to decimal values; takes a
# scalar dozenal digit, returns the scalar decimal digit

sub decimalize($)
{
	if ($_[0] eq 'X') {
		return 10;
	} elsif ($_[0] eq 'E') {
		return 11;
	} else {
		return $_[0];
	}
}

# converts dozenal integers into decimal integers; takes the
# dozenal integer as a scalar, returns the decimal integer
# as a scalar

sub dec_int($)
{
	my @digits;
	my $len;
	my $decnum;
	my $exp = 0;

	@digits = split(//,$_[0]);
	$exp = $#digits;
	foreach my $var (@digits) {
		$decnum += decimalize($var) * (12**($exp--));
	}
	return $decnum;
}

# convert numbers to dozenal, LaTeX-ready (e.g., with \\x)

# change to dozenal digits; takes the scalar integer,
# returnst he dozenal digit character

sub dozenize($)
{
	if (($_[0] >= 0) && ($_[0] <= 9)) {
		return $_[0];
	} else {
		return 'X' if ($_[0] == 10);
		return 'E' if ($_[0] == 11);
	}
}

# convert integers from decmial to dozenal; takes the scalar
# integer, returns the scalar string

sub doz_int($)
{
	my $decnum = $_[0];
	my $holder = 1;
	my $doznum = "";

	while ($decnum >= 12) {
		$holder = $decnum % 12;
		$holder = dozenize($holder);
		$doznum .= $holder;
		$decnum /= 12;
	}
	$holder = $decnum % 12;
	$holder = dozenize($holder);
	$doznum .= $holder;
	$doznum = scalar reverse($doznum);
	$doznum =~ s/X/\\x/;
	$doznum =~ s/E/\\e/;
	return $doznum;
}

# builds the cell text for the large monthlies; takes the
# day number, the style for the number, and year, month, day

sub makecell($$)
{
	my $numsty = $_[1];
	my $numprint = doz_int($_[0]);

	$celltext = "";
	if ($numsty eq "smallnum") {
		$celltext .= "\\hbox to \\linewidth{\\hfil\\$numsty $numprint\\hfil}\n";
	} else {
		$celltext .= "\\hbox to \\linewidth{\\hfil\\$numsty $numprint\\ls}\n";
	}
}

# determines if it's a half week or not; useful for the
# large monthlies and the samll thumbnails; returns whether
# it's a half week and whether it's a half day; takes the
# box number

sub halfweek($)
{
	my $ishalfday = "no";
	my $ishalfweek = "no";
	my $boxnum = $_[0];

	if ($boxnum == 0) {
		if ($numdays == 30) {
			if ($daynum == 23) {
				$ishalfday = "yes";
 				$ishalfweek = "yes";
			}
		} elsif ($numdays == 31) {
			if ($daynum == 23) {
				$ishalfday = "yes";
				$ishalfweek = "yes";
			} elsif ($daynum == 24) {
				$ishalfday = "yes";
				$ishalfweek = "yes";
			}
		}
	} elsif ($boxnum == 1) {
		if ($numdays == 31) {
			if ($daynum == 24) {
				$ishalfday = "yes";
				$ishalfweek = "yes";
			}
		} elsif ($numdays == 30) {
				$ishalfday = "no";
				$ishalfweek = "no";
		}
	} else {
		$ishalfday = "no";
		$ishalfweek = "no";
	}
	return ($ishalfweek, $ishalfday);
}

# prints out the day list on the large monthly calendars

sub daylist($)
{
	my $startmonthtable;
	my @monthnames = qw( January February March April May June July August
		September October November December );
	my $monthname = $monthnames[$_[0]-1];
	$startmonthtable = <<END;
		\\renewcommand*{\\arraystretch}{1.2}
		\\begin{landscape}
		\\vspace{-1em}\\centering\\monthsty{$monthname}\\vskip1em
		\\noindent
		\\begin{tabular}{|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|%
			>{\\daysty\\vspace{-.5em}}p{\\daywidth}<{\\vspace{-.8em}}|}
		\\hline
		Sunday & Monday & Tuesday & Wednesday & Thursday%
		& Friday & Saturday \\\\
		\\end{tabular}\\vskip-1.4pt
END
	print "$startmonthtable\n";
}

# writes the first week of the month; takes the number of
# blank days at the beginning, the width of a daybox, 
# the height of a daybox, the style of the number, the
# month number, and the year number

sub firstweek($$$$$$)
{
	my $startblanks = $_[0];
	my $totalboxes;
	my $boxnum;
	my $width = $_[1];
	my $height = $_[2];
	my $numsty = $_[3];
	my $multicont = "";
	my $month = $_[4];
	my $year = $_[5];

	if ($numsty eq "smallnum") {
		print "\\renewcommand*{\\arraystretch}{0.2}\n";
		print "\\begin{tabular}{p{\\$width}|p{\\$width}|%\n";
		print "p{\\$width}|p{\\$width}|p{\\$width}|p{\\$width}|%\n";
		print "p{\\$width}}\n";
	} else {
		print "\\renewcommand*{\\arraystretch}{1.2}\n";
		print "\\noindent\n";
		print "\\begin{tabular}{|p{\\$width}|p{\\$width}|%\n";
		print "p{\\$width}|p{\\$width}|p{\\$width}|p{\\$width}|%\n";
		print "p{\\$width}|}\n";
		print "\\hline\n";
	}
	$totalboxes = 0; $boxnum = 0; $daynum = 1;
	my @nums = qw( negtwo negone one two three four five six seven eight
		nine ten elv unqua unqone unqtwo );
	if ($startblanks > 0) {
		if ($numsty eq "smallnum") {
			print "\\multicolumn{$startblanks}{c|}{} &\n";
		} else {
			my $monthmin;
			my $monthplus;
			if (($month == 12) && ($year < $calyear)) {
				$monthmin = 0;
				$monthplus = 2;
			} elsif (($month == 12) && ($year == $calyear)) {
				$monthmin = 12;
				$monthplus = 14;
			} elsif (($month == 1) && ($year > $calyear)) {
				$monthmin = 13;
				$monthplus = 15;
			} else {
				$monthmin = $month;
				$monthplus = $month + 2;
			}
			if ($startblanks >= 3) {
				$multicont .= "\\vbox{\\hbox to $startblanks\\daywidth{%\n";
				$multicont .= "\\hfil\\usebox{\\month$nums[$monthmin]}%\n";
				$multicont .= 
					"\\hfil\\usebox{\\month$nums[$monthplus]}\\hfil}}";
			} elsif ($startblanks <= 2) {
				$multicont .= "\\usebox{\\month$nums[$monthmin]}";
			}
			print "\\multicolumn{$startblanks}{|c|}{$multicont} &\n";
		}
		$boxnum+=$startblanks;
		$totalboxes+=$startblanks;
	}
	while ($boxnum < 7) {
		makedaybox($boxnum,$height,$numsty,$year,$month,$daynum);
		$boxnum+=1;
		$totalboxes+=1;
	}
	return $totalboxes;
}

# fills the cell with the specials, etc. for the day from
# the calendar list; takes year, month, day

sub filldaybox($$$)
{
	my $year = $_[0];
	my $month = $_[1];
	my $day = $_[2];
	my $tmpy;
	my $tmpm;
	my $tmpd;
	my $tmp;

#	print STDERR "$year - $month - $day\n" if ($year == 2011);
#	print STDERR "$year - $month - $day\n";
	foreach my $var (@callist) {
		if ($var !~ /special%/) {
			next;
		} else {
			($tmpy,$tmpm,$tmpd,$tmp) = ($var =~ 
				/(.*?)\/(.*?)\/(.*?):\s*(.*)$/);
			$tmp =~ s/%.*%//;
			$tmp .= "\\linebreak";
			if (($year == dec_int($tmpy)) && ($month == dec_int($tmpm)) 
				&& ($day == dec_int($tmpd))) {
				$celltext .= "\\specstyl{$tmp}\n";
			}
		}
	}
}

# makes each individual day box for the large monthlies;
# takes the box number and the height of a box, and the
# style for the numbers, the year, the month, and the day

sub makedaybox($$$$$$)
{
	my $ishalfweek;
	my $ishalfday;
	my $boxnum = $_[0];
	my $height = $_[1];
	my $numsty = $_[2];
	my $year = $_[3];
	my $month = $_[4];
	my $day = $_[5];

	# set up for the double cells
	($ishalfweek,$ishalfday) = halfweek($boxnum);
	if ($ishalfweek eq "yes") {
		if ($ishalfday eq "yes") {
			makecell($daynum,$numsty);
			filldaybox($year,$month,$day) if $numsty ne "smallnum";
			$celltext =~ s/\\ls/\\shorts/;
			$celltext =~ s/\\smallnum/\\extsmall/;
			print "{\\vtop to.3\\$height {$celltext}\\vfill}" 
				if ($numsty ne "smallnum");
			print "\\vspace{1.3em}\\hbox{\\rule{\\linewidth}{.4pt}}\n"
				if ($numsty ne "smallnum");
			print "\\vtop{\\vfill$celltext\\vfill}" 
				if ($numsty eq "smallnum");
			makecell($daynum+7,$numsty);
			filldaybox($year,$month,$day) if $numsty ne "smallnum";
			$celltext =~
			s/\\smallnum/\\vskip-1.8em\\hbox{\\rule{\\linewidth}{.4pt}}\\vskip-0.2pt\\hskip1.0pt\\extsmall/;
			$celltext =~ s/\\ls/\\shorts/;
			print "{\\vtop to.3\\$height {$celltext}}" 
				if ($numsty ne "smallnum");
			print "\\vtop{\\vfill$celltext\\vfill}" 
				if ($numsty eq "smallnum");
			print "&\n";
		} elsif ($ishalfday eq "no") {
			makecell($daynum,$numsty);
			filldaybox($year,$month,$day) if $numsty ne "smallnum";
			$celltext .= "\\rule{0pt}{\\$height}";
			print "\\vtop to\\$height {$celltext}" 
				if ($numsty ne "smallnum");
			print "\\vbox to\\$height {$celltext}" 
				if ($numsty eq "smallnum");
			print "&" if $boxnum < 6;
			print "\\\\" if $boxnum == 6;
		}
	} else {
		makecell($daynum,$numsty);
		filldaybox($year,$month,$day) if $numsty ne "smallnum";
		$celltext .= "\\rule{0pt}{\\$height}";
		print "\\vtop to\\$height {$celltext}" if ($numsty ne "smallnum");
		print "\\vbox to\\$height {$celltext}" if ($numsty eq "smallnum");
		print "&" if $boxnum < 6;
		print "\\\\" if $boxnum == 6;
	}
	$daynum+=1;
}

# builds the weeks other than the first week for the large
# monthlies; takes the number of blank days at the end,
# the total boxes, the daybox height, the number style, 
# the current month, and the year

sub nextweeks($$$$$$)
{
	my $endblanks = $_[0];
	my $totalboxes = $_[1];
	my $height = $_[2];
	my $numsty = $_[3];
	my $boxnum;
	my @nums = qw( negtwo negone one two three four five six seven eight
		nine ten elv unqua unqone unqtwo);
	my $multicont = "";
	my $month = $_[4];
	my $year = $_[5];

	print "\\hline\n";
	$boxnum = 0;
	while (($boxnum < 7) && ($daynum <= $numdays)) {
		makedaybox($boxnum,$height,$numsty,$year,$month,$daynum);
		$boxnum+=1;
		$totalboxes+=1;
	}
	if ($endblanks > 0 && $daynum > $numdays) {
		if ($numsty eq "smallnum") {
			print "\\multicolumn{$endblanks}{c}{}\\\\\n";
		} else {
			if ($endblanks > 0) {
				my $monthmin;
				my $monthplus;
				if (($month == 12) && ($year < $calyear)) {
					$monthmin = 0;
					$monthplus = 2;
				} elsif (($month == 12) && ($year == $calyear)) {
					$monthmin = 12;
					$monthplus = 14;
				} elsif (($month == 1) && ($year > $calyear)) {
					$monthmin = 13;
					$monthplus = 15;
				} else {
					$monthmin = $month;
					$monthplus = $month + 2;
				}
				if ($endblanks >= 3) {
					$multicont .= "\\vbox{\\hbox to $endblanks\\daywidth{%\n";
					$multicont .= "\\hfil\\usebox{\\month$nums[$monthmin]}%\n";
					$multicont .= 
						"\\hfil\\usebox{\\month$nums[$monthplus]}\\hfil}}";
				} elsif ($endblanks <= 2) {
					$multicont .= "\\usebox{\\month$nums[$monthplus]}";
				}
				print "\\multicolumn{$endblanks}{c|}{$multicont} &\n";
			}
		}
	}
}

# preps for the monthlies; takes year, month; returns the
# number of blank days at the start and the end

sub opening($$)
{
	my $month = $_[1];
	my $year = $_[0];
	my $firstday;

	$firstday = getdaynum($year,$month,1);
	return getblanknums($year,$month,$firstday);
}

# returns the weekday number; takes year, month, day

sub getdaynum($$$)
{
	my $thefirstday;
	my $dayname;

	$dayname = &day($_[1],$_[2],$_[0]);
	if ($dayname eq "SUN") {
		$thefirstday = 0;
	} elsif ($dayname eq "MON") {
		$thefirstday = 1;
	} elsif ($dayname eq "TUE") {
		$thefirstday = 2;
	} elsif ($dayname eq "WED") {
		$thefirstday = 3;
	} elsif ($dayname eq "THU") {
		$thefirstday = 4;
	} elsif ($dayname eq "FRI") {
		$thefirstday = 5;
	} elsif ($dayname eq "SAT") {
		$thefirstday = 6;
	} else {
		print STDERR "ERROR:  Not a real weekday\n"; die;
	}
	return $thefirstday;
}

# gets the number of blank days in a month, beginning or
# end; takes year, month, the first day of the month

sub getblanknums($$$)
{
	my $monthname;
	my $year = $_[0];
	my $calmonth = $_[1];
	my $firstday = $_[2];
	my $startblanks;
	my $endblanks;

	$startblanks = $firstday;
	if ($calmonth == 1) {
		$numdays = 31;
		$monthname = "january";
	} elsif ($calmonth == 2) {
		$monthname = "february";
		if (($year % 4 == 0) && ($year % 100 != 0)) {
			$numdays = 29;
		} else {
			$numdays = 28;
		}
	} elsif ($calmonth == 3) {
		$numdays = 31;
		$monthname = "march";
	} elsif ($calmonth == 4) {
		$numdays = 30;
		$monthname = "april";
	} elsif ($calmonth == 5) {
		$numdays = 31;
		$monthname = "may";
	} elsif ($calmonth == 6) {
		$numdays = 30;
		$monthname = "june";
	} elsif ($calmonth == 7) {
		$numdays = 31;
		$monthname = "july";
	} elsif ($calmonth == 8) {
		$numdays = 31;
		$monthname = "august";
	} elsif ($calmonth == 9) {
		$numdays = 30;
		$monthname = "september";
	} elsif ($calmonth == 10) {
		$numdays = 31;
		$monthname = "october";
	} elsif ($calmonth == 11) {
		$numdays = 30;
		$monthname = "november";
	} elsif ($calmonth == 12) {
		$numdays = 31;
		$monthname = "december";
	} else {
		print STDERR "ERROR:  Not a real month.\n"; die;
	}
	$endblanks = 35 - $numdays - $startblanks;
	if ($endblanks < 0) {
		$endblanks = 0;
	}
	return ($startblanks, $endblanks);
}

# prints an individual large monthly; takes year, month

sub run_month($$)
{
	my $i;
	my $startblanks;
	my $endblanks;
	my $totalboxes;
	my $boxnum;
	my $month = $_[1];

	($startblanks, $endblanks) = opening($_[0],$_[1]);
	daylist($_[1]);
	$totalboxes = 
		firstweek($startblanks,"daywidth","dayheight","numsty",$month,$_[0]);
	for ($i=0; $i < 4; $i++) {
		nextweeks($endblanks,$totalboxes,"dayheight","numsty",$month,$_[0]);
	}
	print "\\hline\\end{tabular}\n";
	print "\\end{landscape}\n";
}

# prints out the full large monthly calendars; takes year

sub large_monthlies($)
{
	my $i;
	my $j;
	my $k;
	my $year = $_[0];

	run_month($year-1,12);
	print "\\newpage\n";
	for ($i = 1; $i < 13; ++$i) {
		run_month($year,$i);
		print "\\newpage\n";
	}
	run_month($year+1,1);
	print "\\newpage\n";
}

# create the thumbnail months

sub run_smallmonth($$)
{
	my $i;
	my $startblanks;
	my $endblanks;
	my $totalboxes;
	my $boxnum;


	($startblanks, $endblanks) = opening($_[0],$_[1]);
	$totalboxes = 
		firstweek($startblanks,"smallday","smallheight","smallnum",$_[1],$_[0]);
	for ($i=0; $i < 4; $i++) {
		nextweeks($endblanks,$totalboxes,"smallheight","smallnum",$_[1],$_[0]);
	}
	print "\\end{tabular}\n";
}

# produces the small monthlies that rest in the nooks and
# crannies of the rest of the calendar; takes the current
# year

sub small_monthlies($)
{
	my $i;
	my $year = $_[0];
	my @nums = qw( negtwo negone one two three four five six seven eight
	nine ten elv unqua unqone unqtwo );

	for ($i = 0; $i <= 15; ++$i) {
		print "\\newsavebox{\\month$nums[$i]}\n";
		print "\\savebox{\\month$nums[$i]}[\\smallday]{%\n";
		print "\\vbox to1em{\\hbox{%\n";
		print "\\setlength\\extrarowheight{0pt}\n";
		if ($i == 0) {
			run_smallmonth($year-1,11);
		} elsif ($i == 1) {
			run_smallmonth($year-1,12);
		} elsif ($i == 13) {
			run_smallmonth($year,12);
		} elsif ($i == 14) {
			run_smallmonth($year+1,1);
		} elsif ($i == 15) {
			run_smallmonth($year+1,2);
		} else {
			run_smallmonth($year,$i-1);
		}
		print "\\setlength\\extrarowheight{4pt}\n";
		print "}} % end the vbox and the hbox\n";
		print "} % end savebox month$nums[$i]\n";
	}
}

sub buildweek($$)
{
	my $time = 6;
	my $year = $_[0];
	my $hour = 6;
	my $min = 0;
	my $phr = "06";
	my $pmn = "00";
	my $dayone = "Monday";
	my $daytwo = "Tuesday";
	my $daythree = "Wednesday";

	print "\\newpage\n";
	print "\\setlength\\shortline{\\linewidth-6ex-9pt}\n";
	print "\\setlength\\thirdskip{\\shortline/3}\n";
	print "\\setlength\\weeklydayboxwid{\\linewidth+1pt}\n";
	print "\\checkoddpage\\ifoddpage%\n";
	print "\t\\def\\dayone{Thursday}\\def\\daytwo{Friday}%\n";
	print "\t\\def\\daythree{Saturday}%\n";
	print "\\else\\def\\dayone{Monday}\\def\\daytwo{Tuesday}%\n";
	print "\t\\def\\daythree{Wednesday}\\fi%\n";
	print "\\vbox to\\daywidth{\\vfill}\n";
# begin the weekday name box
	print "\\begin{tcolorbox}[boxrule=2pt,arc=0pt,%\n";
	print "\twidth=\\weeklydayboxwid,height=1.5\\baselineskip,%\n";
	print "\tcolback=gray,coltext=white]%\n";
	print "\t\\vskip-0.5em\\hskip3ex\\hbox to\\thirdskip{%\n";
	print "\t\t\\hfil\\weekdaysty\\dayone\\hfil}%\n";
	print "\t\\hbox to\\thirdskip{\\hfil\\weekdaysty\\daytwo\\hfil}%\n";
	print "\t\\hbox to\\thirdskip{\\hfil\\weekdaysty\\daythree\\hfil}%\n";
	print "\\end{tcolorbox}\\nointerlineskip\\vskip-2pt%\n";
# end the weekday name box
	print "\\rule{\\linewidth}{2pt}\n";
	for (my $i = 1; $i <= (14*4); $i++) {
		$phr = doz_int($hour);
		$phr = "0".$phr if (length($phr) < 2);
		$phr = "0".$phr if $phr =~ /^\\/;
		$pmn = $min."0";
		print "\\vss\n";
		print "\\nointerlineskip\\vbox to0pt{%\n";
		print "\t\\vskip3pt\\hskip3pt$phr;$pmn\\vss%\n";
		print "\t\\rule{2pt}{\\baselineskip}%\n";
		print "\t\\hskip6ex\\rule{2pt}{\\baselineskip}%\n";
		print "\t\\hskip\\thirdskip\\rule{2pt}{\\baselineskip}%\n";
		print "\t\\hskip\\thirdskip%\n";
		print "\t\\checkoddpage\\ifoddpage%\n";
		if ($phr ne "13" && $phr ne "14") {
			print "\\rule{2pt}{\\baselineskip}%\n";
		} else {#FFF
			if ($pmn eq "90" & $phr eq "13") {
				print "\\begin{tcolorbox}[boxrule=2pt,arc=0pt,%\n";
				print "\twidth=.318\\weeklydayboxwid,height=2\\baselineskip,%\n";
				print "\tcolback=gray,coltext=white,%\n";
				print "\tbefore={\\hskip0em}]%\n";
				print "\t\\vskip-0.25em\\hbox to.318\\weeklydayboxwid{%\n";
				print "\t\\hfil\\hskip-3em\\weekdaysty Sunday\\hfil}\\end{tcolorbox}%\n";
				print "\\hskip2pt%\n";
			} else {
				print "\\rule{2pt}{\\baselineskip}%\n";
			}
		}
		print "\\else\\rule{2pt}{\\baselineskip}%\n";
		print "\\fi%\n";
		print "\t\\hskip\\thirdskip\\rule{2pt}{\\baselineskip}%\n";
		print "\\vss}%\n";
		print "\\rule{\\linewidth}{0.4pt}\n" if ($i % 4) != 0;
		print "\\rule{\\linewidth}{2pt}\n" if ($i % 4) == 0;
		$hour++ if ($i % 4) == 0;
		$min = 0 if ($i % 4) == 0;
		$min += 3 if ($i % 4) != 0;
	}
	print "\\checkoddpage\\ifoddpage%\n";
	print "\\begin{tcolorbox}[boxrule=2pt,arc=0pt,%\n";
	print "\twidth=.3\\weeklydayboxwid,height=1.5\\baselineskip,%\n";
	print "\tcolback=gray,coltext=white]%\n";
	print "\t\\vskip-0.5em\\hskip3ex\\hbox to\\thirdskip{%\n";
	print "\t\\weekdaysty Sunday}\\end{tcolorbox}%\n";
	print "\\fi%\n";
	print "\\newpage\n";
}

sub weeklies($)
{
	my @nums = qw( negtwo negone one two three four five six seven eight
		nine ten elv unqua unqone unqtwo );
	my $i;

	$i = 0;
	buildweek($_[0],$i);
	buildweek($_[0],$i);
}

sub finish()
{
	print "\\end{document}\n";
}

# we all know what this one is for

sub main()
{
	my $callist;
	my $date = dec_int($opt_d);
	my $datemin = doz_int($date - 1);
	my $dateplus = doz_int($date + 1);
	my $date = $opt_d;
	$datemin =~ s/\\x/X/g;
	$datemin =~ s/\\e/E/g;
	$dateplus =~ s/\\x/X/g;
	$dateplus =~ s/\\e/E/g;

#	$callist = qx(./dozcal -lt -d$datemin);
#	$callist .= qx(./dozcal -lt -d$date);
#	$callist .= qx(./dozcal -lt -d$dateplus);
	@callist = split(/\n/,$callist);
	preamble();
	$calyear = dec_int($date);
	small_monthlies($calyear);
	large_monthlies($calyear);
	weeklies($calyear);
	finish();
}

main();
